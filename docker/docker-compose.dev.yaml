services:
  # Service Registry (Eureka Server)
  service-registry:
    build:
      context: ../service-registry
      dockerfile: Dockerfile
    container_name: crm-service-registry-dev
    restart: unless-stopped
    ports:
      - "8761:8761"
    environment:
      - JAVA_OPTS=-Xms128m -Xmx256m -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0
      - EUREKA_INSTANCE_HOSTNAME=service-registry
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - registry_logs:/var/log/service-registry

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: crm-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: db_crm
      POSTGRES_USER: user_crm
      POSTGRES_PASSWORD: password_crm
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user_crm -d db_crm"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  # Auth Service
  auth-service:
    build:
      context: ../auth-service
      dockerfile: Dockerfile
    container_name: crm-auth-service-dev
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - JAVA_OPTS=-Xms256m -Xmx512m -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/db_crm
      - SPRING_DATASOURCE_USERNAME=user_crm
      - SPRING_DATASOURCE_PASSWORD=password_crm
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_JPA_SHOW_SQL=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=auth-service
    depends_on:
      service-registry:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    volumes:
      - auth_logs:/var/log/auth-service

  # Users Service
  users-service:
    build:
      context: ../users-service
      dockerfile: Dockerfile
    container_name: crm-users-service-dev
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - JAVA_OPTS=-Xms256m -Xmx512m -XX:+UseG1GC -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/db_crm
      - SPRING_DATASOURCE_USERNAME=user_crm
      - SPRING_DATASOURCE_PASSWORD=password_crm
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_JPA_SHOW_SQL=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=false
      - EUREKA_INSTANCE_HOSTNAME=users-service
      - SERVER_PORT=8082
    depends_on:
      service-registry:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s
    volumes:
      - users_logs:/var/log/users-service

  # Redis for caching (optional but recommended for development)
  redis:
    image: redis:7-alpine
    container_name: crm-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

volumes:
  postgres_data:
    driver: local
  registry_logs:
    driver: local
  auth_logs:
    driver: local
  users_logs:
    driver: local

networks:
  crm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 