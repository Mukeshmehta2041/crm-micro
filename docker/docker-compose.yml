version: '3.8'

services:
  service-registry:
    build:
      context: ../service-registry
      dockerfile: Dockerfile
    container_name: crm-service-registry
    restart: unless-stopped
    ports:
      - "8761:8761"
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    container_name: crm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: db_crm
      POSTGRES_USER: user_crm
      POSTGRES_PASSWORD: password_crm
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user_crm -d db_crm"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-service:
    build:
      context: ../auth-service
      dockerfile: Dockerfile
    container_name: crm-auth-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      service-registry:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  users-service:
    build:
      context: ../users-service
      dockerfile: Dockerfile
    container_name: crm-users-service
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      service-registry:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  postgres_data:
    driver: local

networks:
  crm-network:
    driver: bridge
